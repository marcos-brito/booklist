package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"fmt"

	"github.com/google/uuid"
	"github.com/marcos-brito/booklist/internal/models"
	"github.com/marcos-brito/booklist/internal/store"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, uuid uuid.UUID) (*models.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Name is the resolver for the name field.
func (r *userResolver) Name(ctx context.Context, obj *models.User) (*string, error) {
	panic(fmt.Errorf("not implemented: Name - name"))
}

// Lists is the resolver for the lists field.
func (r *userResolver) Lists(ctx context.Context, obj *models.User) ([]*models.List, error) {
	panic(fmt.Errorf("not implemented: Lists - lists"))
}

// Collection is the resolver for the collection field.
func (r *userResolver) Collection(ctx context.Context, obj *models.User) ([]*models.CollectionItem, error) {
	panic(fmt.Errorf("not implemented: Collection - collection"))
}

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
