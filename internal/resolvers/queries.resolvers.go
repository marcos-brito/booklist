package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"

	"github.com/marcos-brito/booklist/internal/auth"
	"github.com/marcos-brito/booklist/internal/models"
	"github.com/marcos-brito/booklist/internal/store"
)

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*models.Profile, error) {
	session, ok := auth.GetSession(ctx)
	if !ok {
		return nil, nil
	}

	profile, err := store.NewUserStore(store.DB).FindProfileByUserUuid(session.Identity.Id)
	if err != nil {
		return nil, ErrInternal
	}

	ident, err := auth.ParseIdentity(session.Identity.Traits)
	if err != nil {
		return nil, ErrInternal
	}

	profile.Name = ident.Name
	profile.Email = ident.Email

	return profile, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
