package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"

	"github.com/marcos-brito/booklist/internal/auth"
	"github.com/marcos-brito/booklist/internal/models"
	"github.com/marcos-brito/booklist/internal/store"
)

// Book is the resolver for the book field.
func (r *collectionItemResolver) Book(ctx context.Context, obj *models.CollectionItem) (*models.Book, error) {
	book, err := store.NewBookStore(store.DB).FindById(obj.BookID)

	if err != nil {
		return nil, ErrInternal
	}

	return book, nil
}

// Collection is the resolver for the collection field.
func (r *profileResolver) Collection(ctx context.Context, obj *models.Profile) ([]*models.CollectionItem, error) {
	session, ok := auth.GetSession(ctx)
	if !ok {
		return nil, ErrUnauthorized
	}

	items, err := store.NewUserStore(store.DB).FindItems(session.Identity.Id)
	if err != nil {
		return nil, ErrInternal
	}

	return items, nil
}

// CollectionItem returns CollectionItemResolver implementation.
func (r *Resolver) CollectionItem() CollectionItemResolver { return &collectionItemResolver{r} }

// Profile returns ProfileResolver implementation.
func (r *Resolver) Profile() ProfileResolver { return &profileResolver{r} }

type collectionItemResolver struct{ *Resolver }
type profileResolver struct{ *Resolver }
